In Unity, the UnpackNormal() function is a built-in function that is used to convert a normal map texture stored in RGB format into a 3D vector
that can be used to calculate lighting in a shader. The UnpackNormal() function takes the RGB color values of a normal map texture and converts them into a 3D vector.

Here's an example of how to use the UnpackNormal() function in a shader:
---------------------------------------------------------------------
Shader "Custom/UnpackNormalExample" {
    Properties {
        _MainTex ("Texture", 2D) = "white" {}
        _BumpMap ("Normal Map", 2D) = "bump" {}
    }
 
    SubShader {
        Tags { "RenderType"="Opaque" }
        LOD 100
 
        Pass {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
 
            #include "UnityCG.cginc"
 
            struct appdata {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
                float3 normal : NORMAL;
            };
 
            struct v2f {
                float2 uv : TEXCOORD0;
                float3 worldNormal : TEXCOORD1;
                float4 vertex : SV_POSITION;
            };
 
            sampler2D _MainTex;
            sampler2D _BumpMap;
 
            v2f vert (appdata v) {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                o.worldNormal = UnpackNormal(tex2D(_BumpMap, v.uv).rgb);
                return o;
            }
 
            fixed4 frag (v2f i) : SV_Target {
                fixed4 col = tex2D(_MainTex, i.uv);
                float3 worldNormal = normalize(i.worldNormal);
                float3 lightDirection = normalize(_WorldSpaceLightPos0.xyz);
                float3 diffuse = max(dot(worldNormal, lightDirection), 0.0);
                col.rgb *= diffuse;
                return col;
            }
            ENDCG
        }
    }
}
---------------------------------------------------------------------
In this example, the UnpackNormal() function is used in the vert function to unpack the normal map texture and
pass the resulting 3D vector as a varying variable to the frag function. The worldNormal variable is then
used in the frag function to calculate the diffuse lighting of the object.

It's worth noting that the UnpackNormal() function assumes that the RGB color values of the normal map texture are in tangent space. 
If the normal map is stored in object space or world space, it will need to be transformed to tangent space before being passed to the UnpackNormal() function.
This can be done using the mul() function to multiply the normal map by the object-to-tangent or world-to-tangent matrix.
